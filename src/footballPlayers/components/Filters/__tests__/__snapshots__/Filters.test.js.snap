// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: <Filters /> should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Filters
    age={21}
    name="Test name"
    onAgeChange={[Function]}
    onNameChange={[Function]}
    onPositionChange={[Function]}
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4"
          name="playerName"
          onChange={[Function]}
          placeholder="Player Name"
          type="text"
          value="Test name"
/>,
        <select
          className="border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4 bg-white"
          name="playerPosition"
          onChange={[Function]}
          placeholder="Position"
>
          <option
                    value=""
          >
                    Position
          </option>
          <option
                    value="position 1"
          >
                    position 1
          </option>
          <option
                    value="position 2"
          >
                    position 2
          </option>
</select>,
        <input
          className="border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4"
          max="40"
          min="18"
          name="playerAge"
          onChange={[Function]}
          placeholder="Age"
          type="number"
          value={21}
/>,
        <button
          className="border-2 border-black px-6 py-3 w-full sm:w-auto"
          type="submit"
>
          Search
</button>,
      ],
      "className": "my-4 text-xs sm:flex sm:justify-between",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4",
          "name": "playerName",
          "onChange": [Function],
          "placeholder": "Player Name",
          "type": "text",
          "value": "Test name",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value=""
>
              Position
</option>,
            Array [
              <option
                value="position 1"
>
                position 1
</option>,
              <option
                value="position 2"
>
                position 2
</option>,
            ],
          ],
          "className": "border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4 bg-white",
          "name": "playerPosition",
          "onChange": [Function],
          "placeholder": "Position",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Position",
              "value": "",
            },
            "ref": null,
            "rendered": "Position",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "position 1",
            "nodeType": "host",
            "props": Object {
              "children": "position 1",
              "value": "position 1",
            },
            "ref": null,
            "rendered": "position 1",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "position 2",
            "nodeType": "host",
            "props": Object {
              "children": "position 2",
              "value": "position 2",
            },
            "ref": null,
            "rendered": "position 2",
            "type": "option",
          },
        ],
        "type": "select",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4",
          "max": "40",
          "min": "18",
          "name": "playerAge",
          "onChange": [Function],
          "placeholder": "Age",
          "type": "number",
          "value": 21,
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Search",
          "className": "border-2 border-black px-6 py-3 w-full sm:w-auto",
          "type": "submit",
        },
        "ref": null,
        "rendered": "Search",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4"
            name="playerName"
            onChange={[Function]}
            placeholder="Player Name"
            type="text"
            value="Test name"
/>,
          <select
            className="border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4 bg-white"
            name="playerPosition"
            onChange={[Function]}
            placeholder="Position"
>
            <option
                        value=""
            >
                        Position
            </option>
            <option
                        value="position 1"
            >
                        position 1
            </option>
            <option
                        value="position 2"
            >
                        position 2
            </option>
</select>,
          <input
            className="border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4"
            max="40"
            min="18"
            name="playerAge"
            onChange={[Function]}
            placeholder="Age"
            type="number"
            value={21}
/>,
          <button
            className="border-2 border-black px-6 py-3 w-full sm:w-auto"
            type="submit"
>
            Search
</button>,
        ],
        "className": "my-4 text-xs sm:flex sm:justify-between",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4",
            "name": "playerName",
            "onChange": [Function],
            "placeholder": "Player Name",
            "type": "text",
            "value": "Test name",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value=""
>
                Position
</option>,
              Array [
                <option
                  value="position 1"
>
                  position 1
</option>,
                <option
                  value="position 2"
>
                  position 2
</option>,
              ],
            ],
            "className": "border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4 bg-white",
            "name": "playerPosition",
            "onChange": [Function],
            "placeholder": "Position",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Position",
                "value": "",
              },
              "ref": null,
              "rendered": "Position",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "position 1",
              "nodeType": "host",
              "props": Object {
                "children": "position 1",
                "value": "position 1",
              },
              "ref": null,
              "rendered": "position 1",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "position 2",
              "nodeType": "host",
              "props": Object {
                "children": "position 2",
                "value": "position 2",
              },
              "ref": null,
              "rendered": "position 2",
              "type": "option",
            },
          ],
          "type": "select",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "border-2 border-black p-2 my-1 sm:my-0 w-full sm:w-1/4",
            "max": "40",
            "min": "18",
            "name": "playerAge",
            "onChange": [Function],
            "placeholder": "Age",
            "type": "number",
            "value": 21,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Search",
            "className": "border-2 border-black px-6 py-3 w-full sm:w-auto",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Search",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
